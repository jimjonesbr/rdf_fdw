\pset null NULL
SELECT strstarts('foobar','foo');
 strstarts 
-----------
 t
(1 row)

SELECT strstarts('foobar','xyz');
 strstarts 
-----------
 f
(1 row)

SELECT strstarts('foobar','');
 strstarts 
-----------
 t
(1 row)

SELECT strstarts('','xyz');
 strstarts 
-----------
 f
(1 row)

SELECT strstarts('foobar',NULL);
 strstarts 
-----------
 NULL
(1 row)

SELECT strstarts(NULL,'xyz');
 strstarts 
-----------
 NULL
(1 row)

SELECT strstarts(NULL, NULL);
 strstarts 
-----------
 NULL
(1 row)

SELECT strends('foobar','bar');
 strends 
---------
 t
(1 row)

SELECT strends('foobar','xyz');
 strends 
---------
 f
(1 row)

SELECT strends('foobar','');
 strends 
---------
 t
(1 row)

SELECT strends('','xyz');
 strends 
---------
 f
(1 row)

SELECT strends('foobar',NULL);
 strends 
---------
 NULL
(1 row)

SELECT strends(NULL,'xyz');
 strends 
---------
 NULL
(1 row)

SELECT strends(NULL, NULL);
 strends 
---------
 NULL
(1 row)

SELECT strbefore('abc','b');
 strbefore 
-----------
 a
(1 row)

SELECT strbefore('abc','xyz');
 strbefore 
-----------
 
(1 row)

SELECT strbefore('abc', NULL);
 strbefore 
-----------
 NULL
(1 row)

SELECT strbefore(NULL, 'xyz');
 strbefore 
-----------
 NULL
(1 row)

SELECT strbefore(NULL, NULL);
 strbefore 
-----------
 NULL
(1 row)

SELECT strbefore('abc', '');
 strbefore 
-----------
 
(1 row)

SELECT strbefore('', 'xyz');
 strbefore 
-----------
 
(1 row)

SELECT strbefore('', '');
 strbefore 
-----------
 
(1 row)

SELECT strafter('abc','b');
 strafter 
----------
 c
(1 row)

SELECT strafter('abc','xyz');
 strafter 
----------
 
(1 row)

SELECT strafter('abc', NULL);
 strafter 
----------
 NULL
(1 row)

SELECT strafter(NULL, 'xyz');
 strafter 
----------
 NULL
(1 row)

SELECT strafter(NULL, NULL);
 strafter 
----------
 NULL
(1 row)

SELECT strafter('abc', '');
 strafter 
----------
 abc
(1 row)

SELECT strafter('', 'xyz');
 strafter 
----------
 
(1 row)

SELECT strafter('', '');
 strafter 
----------
 
(1 row)

SELECT contains('foobar', 'oob');
 contains 
----------
 t
(1 row)

SELECT contains('foobar', '');
 contains 
----------
 t
(1 row)

SELECT contains('', 'foo');
 contains 
----------
 f
(1 row)

SELECT contains('foobar', NULL);
 contains 
----------
 NULL
(1 row)

SELECT contains(NULL, 'foo');
 contains 
----------
 NULL
(1 row)

SELECT contains(NULL, NULL);
 contains 
----------
 NULL
(1 row)

SELECT encode_for_uri('foo! *''();:@&=+$,/?#[]');
                        encode_for_uri                        
--------------------------------------------------------------
 foo%21%20%2A%27%28%29%3B%3A%40%26%3D%2B%24%2C%2F%3F%23%5B%5D
(1 row)

SELECT encode_for_uri('foo');
 encode_for_uri 
----------------
 foo
(1 row)

SELECT encode_for_uri('');
 encode_for_uri 
----------------
 
(1 row)

SELECT encode_for_uri(NULL);
 encode_for_uri 
----------------
 NULL
(1 row)

CREATE SERVER wikidata
FOREIGN DATA WRAPPER rdf_fdw 
OPTIONS (endpoint 'https://query.wikidata.org/sparql');
CREATE FOREIGN TABLE ft (
  o text    OPTIONS (variable '?o', language 'de')
)
SERVER wikidata OPTIONS (
  log_sparql 'true',
  sparql 'SELECT * WHERE {
    wd:Q192490 rdfs:label ?o
  }
'); 
SELECT DISTINCT o FROM ft
WHERE
  strbefore(o, 'SQL') = 'Postgre' AND
  strbefore(o, '') = '' AND
  strbefore('', '') = '' AND
  strbefore(o, 'SQL') <> 'My' AND
  strafter(o, 'Postgre') = 'SQL' AND
  strafter(o, '') = 'PostgreSQL' AND
  strafter('', '') = '' AND 
  strafter(o, 'Postgre') <> 's' AND
  
  strends(o, 'SQL') AND
  strends(o, '') AND
  strstarts(o, 'Postgre') AND
  strstarts(o, '') AND
  
  contains(o,'ostg') AND
  contains(o,'') AND
  NOT contains(o,'Oracle') AND
  encode_for_uri(o) = 'PostgreSQL';
INFO:  SPARQL query sent to 'https://query.wikidata.org/sparql':


SELECT DISTINCT ?o 
{
    wd:Q192490 rdfs:label ?o
  
 ## rdf_fdw pushdown conditions ##
 FILTER(STRBEFORE(STR(?o), "SQL") != "My")
 FILTER(STRAFTER(STR(?o), "Postgre") != "s")
 FILTER(STRENDS(STR(?o), "SQL"))
 FILTER(STRENDS(STR(?o), ""))
 FILTER(STRSTARTS(STR(?o), "Postgre"))
 FILTER(STRSTARTS(STR(?o), ""))
 FILTER(CONTAINS(STR(?o), "ostg"))
 FILTER(CONTAINS(STR(?o), ""))
 FILTER(STRBEFORE(STR(?o), "SQL") = "Postgre")
 FILTER(STRBEFORE(STR(?o), "") = "")
 FILTER(STRAFTER(STR(?o), "Postgre") = "SQL")
 FILTER(STRAFTER(STR(?o), "") = "PostgreSQL")
 FILTER(ENCODE_FOR_URI(STR(?o)) = "PostgreSQL")
}
ORDER BY  ASC (?o)

     o      
------------
 PostgreSQL
(1 row)

DROP SERVER wikidata CASCADE;
NOTICE:  drop cascades to foreign table ft
